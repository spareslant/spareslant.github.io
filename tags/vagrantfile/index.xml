<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vagrantfile on SpareSlant Technical Blog</title>
    <link>/tags/vagrantfile/</link>
    <description>Recent content in vagrantfile on SpareSlant Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 23 Aug 2021 22:29:22 +0100</lastBuildDate><atom:link href="/tags/vagrantfile/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>K8s Vagrant Centos Stream Crio Automated Deployment</title>
      <link>/posts/k8s-vagrant-centos-stream-crio-automated-deployment/</link>
      <pubDate>Mon, 23 Aug 2021 22:29:22 +0100</pubDate>
      
      <guid>/posts/k8s-vagrant-centos-stream-crio-automated-deployment/</guid>
      <description>Introduction  We will be creating a fully automated Vagrant based Kubernetes cluster deployment. Following are the software versions used:  Hardware: MacBook Pro HostOS: MacOS Big Sur 11.5.2 Kube Version: 1.21.4 CRIO: 1.21 Cluster OS: Centos8 Stream   It is assumed that VirtualBox and Vagrant is already installed on your hostOS.  Vagrantfile  Create a directory and create a file named Vagrantfile with following contents in that directory.</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster Using CRI-O</title>
      <link>/posts/kubernetes-cluster-cri-o/</link>
      <pubDate>Sun, 07 Feb 2021 22:18:02 +0000</pubDate>
      
      <guid>/posts/kubernetes-cluster-cri-o/</guid>
      <description>Introduction  We will be creating a 2 node kubernetes cluster using vagrant and virtualbox. We will be using cri-o rather than Docker to configure the cluster. CRI-O uses the systemd cgroup driver per default. We will be creating config files init-defaults.yml and join-defaults.yml to be used by kubeadm to configure control plane and worker rather than using long command line options. In the config files, we shall specify the cgroup driver for kubelet.</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster Using Containerd</title>
      <link>/posts/kubernetes-cluster-containerd/</link>
      <pubDate>Sun, 07 Feb 2021 15:48:01 +0000</pubDate>
      
      <guid>/posts/kubernetes-cluster-containerd/</guid>
      <description>Introduction  We will be creating a 2 node kubernetes cluster using vagrant and virtualbox. We will be using containerd rather than Docker to configure the cluster. We will make sure containerduses systemd as its cgroup driver. We will be creating config files init-defaults.yml and join-defaults.yml to be used by kubeadm to configure control plane and worker rather than using long command line options. In the config files, we shall specify the cgroup driver.</description>
    </item>
    
    <item>
      <title>Multihop SSH Tunnel to access Vagrant VM Service</title>
      <link>/posts/multihop-ssh/</link>
      <pubDate>Tue, 05 Jan 2021 21:09:04 +0000</pubDate>
      
      <guid>/posts/multihop-ssh/</guid>
      <description>Multihop SSH tunnel to access Vagrant VM Service Following is the scenario:  A localmachine (192.168.0.17) A remote machine (192.168.0.19) Another vagrant machine (call it master) running inside above remote machine. This Vagrant VM has private IP 10.0.0.10. A web-service is listening on 10.0.0.10:31421 port inside Vagrant VM. We want this web-service to be accessible in the browser running in localmachine (i.e 192.168.0.17)  Get ssh port of Vagrant VM vagrant port master In my case it was 2200.</description>
    </item>
    
    <item>
      <title>Multiple Vms Vagrantfile</title>
      <link>/posts/multiple-vms-vagrantfile/</link>
      <pubDate>Tue, 10 Mar 2020 17:50:49 +0000</pubDate>
      
      <guid>/posts/multiple-vms-vagrantfile/</guid>
      <description>Introduction A Vagrantfile for multiple VMS.
Prepare Environment mkdir Vagrant_VMS cd Vagrant_VMS vagrant init Populate Vagrantfile with following contents. all_hosts = [ { vagrant_hostname: &amp;#34;amachine&amp;#34;, full_hostname: &amp;#34;amachine.virtual.machine&amp;#34;, vmbox: &amp;#34;fedora/31-cloud-base&amp;#34;, vmbox_version: &amp;#34;31.20191023.0&amp;#34;, ip: &amp;#34;10.0.0.10&amp;#34;, memory: 2048, cpus: 1 }, # { # vagrant_hostname: &amp;#34;anotherMachine&amp;#34;, # full_hostname: &amp;#34;another.virtual.machine&amp;#34;, # vmbox: &amp;#34;fedora/31-cloud-base&amp;#34;, # vmbox_version: &amp;#34;31.20191023.0&amp;#34;, # ip: &amp;#34;10.0.0.12&amp;#34;, # memory: 2048, # cpus: 1 # }, ] # individual machine names must be mentioned is below command line in # order to bring machines.</description>
    </item>
    
  </channel>
</rss>
