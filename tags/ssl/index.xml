<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSL on SpareSlant Technical Blog</title>
    <link>/tags/ssl/</link>
    <description>Recent content in SSL on SpareSlant Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 04 Aug 2019 14:54:01 +0100</lastBuildDate><atom:link href="/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache ReverseProxySSL SSLClientAuth</title>
      <link>/posts/apache-reverseproxyssl-sslclientauth/</link>
      <pubDate>Sun, 04 Aug 2019 14:54:01 +0100</pubDate>
      
      <guid>/posts/apache-reverseproxyssl-sslclientauth/</guid>
      <description>Introduction We will be configuring Apache in reverse proxy mode. Apache will be accepting connections on secure port with SSL client authentication and forward that request to a backend application server Gunicorn. Communication between apache and gunicorn will also be on secure port and SSL authenticated. Gunicorn will run a simple flask app that will be writing some text to file.
Purpose of this excersize is to introduce end to end secure communication from client to apache to app server with SSL client authentication at every stage.</description>
    </item>
    
    <item>
      <title>SSL Certificate Mutual Authentication</title>
      <link>/posts/ssl-certificate/</link>
      <pubDate>Wed, 17 Jul 2019 21:35:50 +0100</pubDate>
      
      <guid>/posts/ssl-certificate/</guid>
      <description>Introduction We will be creating our own CA (Certificate Authority), CSR (Certificate Signing Request), signed certificate. We will be creating server side and client side certificate and will verify them using openssl and curl.
Prepare environment os used $ cat /etc/fedora-release Fedora release 30 (Thirty) $ uname -a Linux localhost.localdomain 5.0.9-301.fc30.x86_64 #1 SMP Tue Apr 23 23:57:35 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux Prepare openssl conf files A reference conf file can be found in /etc/pki/tls/openssl.</description>
    </item>
    
  </channel>
</rss>
